/*Author: Thomas Edwards
 * Date: 4/23/2022
 * Filename: GameTimer.java
 * Description: This will test a game timer concept for the Sudoku Project
This is some old code that I think we can easily translate over to the GameGUI
*We can utilize the same action listener for "Start a new Game" to start the timer on the GameGUI
*Version: 1.0
*/
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.*;
import javax.swing.*;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;

public class GameTimer implements ActionListener {

	//global variables for timer
	JFrame frame = new JFrame();
	JButton startButton = new JButton("START");// will initialize from "start new game" 
	/*The Menu GUI shall start the timer on the GameGUI
	 * the only conditions that need to be altered will be the
	 * to stop once the game ends.
	 * */
	JLabel timerLabel = new JLabel();
	
	int gameTime = 0;//to be used for total game time once user completes game
	int seconds = 0;
	int minutes = 0;
	boolean gameStart = false; 
	String seconds_string = String.format("%02d", seconds);
	String minutes_string = String.format("%02d", minutes);
	
	//ActionListener for gameTime parameters
	Timer gt = new Timer(1000, new ActionListener() {//increments by exactly 1 sec
		
		public void actionPerformed(ActionEvent e) {
			gameTime +=1000;
			minutes = (gameTime/60000);
			seconds = (gameTime/1000) % 60;
			seconds_string = String.format("%02d", seconds);
			minutes_string = String.format("%02d", minutes);
			
			timerLabel.setText(minutes_string+":" + seconds_string);
		}	
	});
	
	GameTimer(){
		
		timerLabel.setText(minutes_string+ ":" + seconds_string);
		timerLabel.setBounds(100,100,200,100);
		timerLabel.setHorizontalAlignment(JTextField.CENTER);
		
		startButton.setBounds(100, 200, 100, 50);
		startButton.setFocusable(false);
		startButton.addActionListener(this);
		
		//modify for menu GUI
		frame.add(startButton);
		
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);	
		frame.setSize(400,400);
		frame.setLayout(null);
		frame.add(timerLabel);
		frame.setVisible(true);
		
		
	}
	@Override
	public void actionPerformed(ActionEvent e) {
		// TODO Auto-generated method stub
		if(e.getSource()==startButton) {
			gameStart=true;
			start();
		}
		
	}
	void start() {
	gt.start();
		
	}

}
